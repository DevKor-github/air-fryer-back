plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.airfryer'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// 개발 도구
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// 테스트
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	
	// Spring Web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	// Spring Data JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// 데이터 검증
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// PostgreSQL
	implementation 'org.postgresql:postgresql:42.7.5'
	implementation 'io.hypersistence:hypersistence-utils-hibernate-63:3.9.10'

	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// OAuth
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// S3
	implementation platform('io.awspring.cloud:spring-cloud-aws-dependencies:3.1.1')
	implementation 'io.awspring.cloud:spring-cloud-aws-starter-s3'

	// Spring Batch
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	testImplementation 'org.springframework.batch:spring-batch-test'

	// 소켓
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	// MongoDB
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

	// .env 파일 지원
	implementation 'me.paulschwarz:spring-dotenv:4.0.0'

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// Firebase Cloud Messaging
	implementation 'com.google.firebase:firebase-admin:9.2.0'
}

tasks.named('test') {
	useJUnitPlatform()
	
	// 테스트 실행 시 test 프로필 활성화
	systemProperty 'spring.profiles.active', 'test'
	
	// 테스트 실행 시 JVM 옵션 설정 (메모리 용량 부족으로 테스트 실행 방지)
	jvmArgs '-Xmx512m'
	
	// 테스트 결과 출력 설정
	testLogging {
		events "passed", "skipped", "failed"
		exceptionFormat "full"
		showCauses true
		showExceptions true
		showStackTraces true
	}
}

// QueryDSL 관련 설정
def querydslDir = 'src/main/generated'

tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

sourceSets {
	main.java.srcDirs += [ querydslDir ]
}

clean {
	delete file(querydslDir)
}